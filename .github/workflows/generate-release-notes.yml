name: Generate Release Notes

on:
  push:
    branches:
      - main

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full history

      - name: Fetch all branches
        run: git fetch --prune --all

      - name: Detect Latest Release Date
        run: |
          # Get the latest release branch (e.g., release/daily/YYYY-MM-DD)
          RELEASE_BRANCH=$(git branch -r --sort=-committerdate | grep "release/daily" | head -n 1 | sed 's/origin\///')
          RELEASE_DATE=$(echo "$RELEASE_BRANCH" | grep -oE "[0-9]{4}-[0-9]{2}-[0-9]{2}")

          echo "Detected Release Branch: $RELEASE_BRANCH"
          echo "Detected Release Date: $RELEASE_DATE"

          echo "RELEASE_DATE=$RELEASE_DATE" >> $GITHUB_ENV

      - name: Set Team Branches
        run: |
          RETENTION_BRANCH="release-retention/daily/$RELEASE_DATE"
          ACTIVATION_BRANCH="release-activation/daily/$RELEASE_DATE"

          echo "RETENTION_BRANCH=$RETENTION_BRANCH" >> $GITHUB_ENV
          echo "ACTIVATION_BRANCH=$ACTIVATION_BRANCH" >> $GITHUB_ENV
          echo "Checking for team branches: origin/$RETENTION_BRANCH and origin/$ACTIVATION_BRANCH"

      - name: Generate Release Notes
        run: |
          echo "## Changes in this release" > release_notes.md
          echo "" >> release_notes.md

          # Function to get retention merge commits
          get_retention_commits() {
            echo "### Release-retention/daily/$RELEASE_DATE Team" >> release_notes.md

            # Get only merge commits containing 'Retention {date}'
            RETENTION_COMMITS=$(git log --oneline --merges --grep="Retention $RELEASE_DATE" origin/main)

            if [[ -z "$RETENTION_COMMITS" ]]; then
              echo "No retention-related merge commits found." >> release_notes.md
            else
              echo -e "$RETENTION_COMMITS" >> release_notes.md
            fi

            echo "" >> release_notes.md
          }

          # Run the function to get commits
          get_retention_commits

          cat release_notes.md

      - name: Upload Release Notes as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release_notes.md
