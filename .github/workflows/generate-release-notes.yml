name: Create Release on Merge

on:
  push:
    branches:
      - main  # Trigger when code is merged into `main`

jobs:
  release:
    permissions:
      contents: write  # Required to publish the release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to track commits correctly

      - name: Set Git Identity
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Generate release version
        id: version
        run: echo "VERSION=$(date +'%Y.%m.%d')" >> $GITHUB_ENV

      - name: Generate Release Notes
        id: notes
        run: |
          # Get the latest merge commit
          LAST_MERGE=$(git log --merges --pretty=format:'%H' -n 1)

          # Get the parent branch of the merge commit
          MERGED_BRANCH=$(git log --pretty=format:'%P' -n 1 $LAST_MERGE | awk '{print $2}')

          # Get all commits from the merged branch
          NOTES=$(git log $MERGED_BRANCH --pretty=format:'%h - %s' --no-merges --reverse | sed ':a;N;$!ba;s/\n/\\n/g')

          echo "NOTES=$NOTES" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: |
            ## Changes in this release
            ${{ env.NOTES }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CHANGELOG
        run: |
          echo "## Release ${{ env.VERSION }}" >> CHANGELOG.md
          echo "${{ env.NOTES }}" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update changelog for ${{ env.VERSION }}"
          git push origin main
